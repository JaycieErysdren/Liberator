#
# python modules
#

import sys, os, os.path
import numpy
from PIL import Image

from descent_pal import DescentPal

inputFile = "/home/jaycie/Projects/Liberator/test_files/descent/descent/palette.256"
# inputFile = sys.argv[-1]
outputFilePath = os.path.split(inputFile)[0] + os.sep + os.path.splitext(os.path.split(inputFile)[1])[0] + os.sep

if not os.path.exists(outputFilePath):
	os.makedirs(outputFilePath)

palFile = DescentPal.from_file(inputFile)

def compute_palette(item, container):
	palette_entries = []

	for item in container:
		palette_entries.append([(item.r / 63), (item.g / 63), (item.b / 63), True])

	return palette_entries

def compute_texture(item, imagesize, bFlip):
	pixels = numpy.zeros([imagesize[1], imagesize[0], 4], dtype=numpy.uint8)

	for y in range(imagesize[1]):
		for x in range(imagesize[0]):
			if bFlip:
				pos = ((imagesize[1] - y - 1) * imagesize[0]) + x
			else:
				pos = (y * imagesize[0]) + x
			pixel = item[pos]
			pixels[y, x, 0] = pixel[0] * 255
			pixels[y, x, 1] = pixel[1] * 255
			pixels[y, x, 2] = pixel[2] * 255
			pixels[y, x, 3] = pixel[3] * 255

	return pixels

def compute_texture_paletted(container, imagesize, palette, bFlip):
	pixels = numpy.zeros([imagesize[1], imagesize[0], 4], dtype=numpy.uint8)

	for y in range(imagesize[1]):
		for x in range(imagesize[0]):
			if bFlip:
				pos = ((imagesize[1] - y - 1) * imagesize[0]) + x
			else:
				pos = (y * imagesize[0]) + x
			pixel = palette[container[pos]]
			pixels[y, x, 0] = pixel[0] * 255
			pixels[y, x, 1] = pixel[1] * 255
			pixels[y, x, 2] = pixel[2] * 255
			pixels[y, x, 3] = pixel[3] * 255

	return pixels

def write_png(filename, array):
	image = Image.fromarray(array)
	image.save(filename)

palette = compute_palette(DescentPal.PaletteEntryT, palFile.palette)

colormap_pixels = compute_texture_paletted(palFile.fade_table, [256, 34], palette, True)
palette_pixels = compute_texture(palette, [16, 16], False)

write_png(f"{outputFilePath}palette.png", palette_pixels)
write_png(f"{outputFilePath}colormap.png", colormap_pixels)

# hardcode a few palettes
descent_base_palette = [
	[0, 0, 0, 255], [48, 48, 40, 255], [40, 48, 32, 255], [40, 40, 32, 255],
	[32, 40, 32, 255], [32, 32, 32, 255], [24, 32, 32, 255], [24, 32, 40, 255],
	[24, 40, 40, 255], [24, 40, 48, 255], [32, 40, 48, 255], [40, 40, 48, 255],
	[40, 48, 48, 255], [40, 48, 56, 255], [48, 48, 56, 255], [56, 48, 56, 255],
	[56, 64, 64, 255], [56, 72, 72, 255], [72, 72, 72, 255], [80, 72, 64, 255],
	[80, 89, 80, 255], [89, 97, 72, 255], [89, 97, 105, 255], [105, 113, 105, 255],
	[113, 121, 113, 255], [129, 129, 121, 255], [40, 56, 56, 255], [32, 48, 48, 255],
	[32, 40, 40, 255], [32, 32, 40, 255], [24, 24, 32, 255], [24, 24, 24, 255],
	[24, 24, 16, 255], [32, 32, 16, 255], [40, 32, 24, 255], [48, 40, 32, 255],
	[24, 32, 24, 255], [16, 24, 24, 255], [16, 24, 32, 255], [16, 16, 24, 255],
	[8, 8, 8, 255], [8, 16, 16, 255], [8, 8, 16, 255], [8, 8, 8, 255], [0, 8, 8, 255], # oops
	[0, 0, 8, 255], [0, 0, 0, 255], [32, 40, 56, 255], [246, 246, 246, 255],
	[238, 238, 238, 255], [230, 230, 230, 255], [222, 222, 222, 255], [214, 214, 214, 255],
	[206, 206, 206, 255], [198, 198, 198, 255], [190, 190, 190, 255], [182, 182, 182, 255],
	[174, 174, 174, 255], [165, 165, 165, 255], [157, 157, 157, 255], [149, 149, 149, 255],
	[141, 141, 141, 255], [137, 137, 137, 255], [129, 129, 129, 255], [121, 121, 121, 255],
	[113, 113, 113, 255], [105, 105, 105, 255], [97, 97, 97, 255], [89, 89, 89, 255],
	[80, 80, 80, 255], [72, 72, 72, 255], [64, 64, 64, 255], [56, 56, 56, 255],
	[48, 48, 48, 255], [40, 40, 40, 255], [32, 32, 32, 255], [24, 24, 24, 255],
	[16, 16, 16, 255], [12, 12, 12, 255], [4, 4, 4, 255], [226, 226, 255, 255],
	[178, 178, 255, 255], [133, 133, 255, 255], [85, 85, 255, 255], [40, 40, 255, 255],
	[0, 0, 255, 255], [0, 0, 230, 255], [0, 0, 206, 255], [0, 0, 182, 255],
	[0, 0, 157, 255], [0, 0, 133, 255], [0, 0, 109, 255], [0, 0, 85, 255],
	[0, 0, 60, 255], [0, 0, 36, 255], [0, 0, 12, 255], [250, 178, 255, 255],
	[246, 129, 255, 255], [246, 85, 255, 255], [242, 0, 255, 255], [210, 0, 226, 255],
	[182, 0, 198, 255], [153, 0, 174, 255], [125, 0, 145, 255], [97, 0, 117, 255],
	[72, 0, 93, 255], [48, 0, 64, 255], [28, 0, 36, 255], [8, 0, 12, 255],
	[238, 218, 218, 255], [230, 210, 210, 255], [222, 202, 202, 255], [214, 194, 194, 255],
	[206, 186, 186, 255], [198, 178, 178, 255], [194, 170, 170, 255], [186, 161, 161, 255],
	[178, 153, 153, 255], [170, 145, 145, 255], [161, 137, 137, 255], [153, 129, 129, 255],
	[149, 125, 125, 255], [137, 109, 109, 255], [125, 97, 97, 255], [117, 85, 85, 255],
	[105, 76, 76, 255], [93, 64, 64, 255], [85, 52, 52, 255], [72, 44, 44, 255],
	[60, 36, 36, 255], [48, 20, 20, 255], [36, 8, 8, 255], [24, 0, 0, 255],
	[12, 0, 0, 255], [165, 153, 125, 255], [137, 125, 85, 255], [113, 97, 56, 255],
	[89, 72, 28, 255], [60, 48, 12, 255], [36, 28, 0, 255], [12, 8, 0, 255],
	[198, 242, 186, 255], [165, 218, 149, 255], [137, 198, 117, 255], [113, 174, 93, 255],
	[89, 153, 68, 255], [68, 129, 48, 255], [52, 109, 28, 255], [36, 85, 16, 255],
	[24, 64, 4, 255], [12, 40, 0, 255], [4, 20, 0, 255], [121, 255, 121, 255],
	[0, 255, 0, 255], [0, 230, 0, 255], [0, 210, 0, 255], [0, 186, 0, 255],
	[0, 161, 0, 255], [0, 141, 0, 255], [0, 117, 0, 255], [0, 97, 0, 255],
	[0, 72, 0, 255], [0, 52, 0, 255], [0, 28, 0, 255], [0, 8, 0, 255],
	[255, 230, 105, 255], [234, 198, 80, 255], [214, 170, 60, 255], [198, 141, 44, 255],
	[178, 113, 28, 255], [161, 85, 16, 255], [141, 60, 4, 255], [109, 32, 0, 255],
	[80, 16, 0, 255], [52, 4, 0, 255], [24, 0, 0, 255], [255, 255, 0, 255],
	[194, 194, 0, 255], [137, 137, 0, 255], [80, 80, 0, 255], [24, 24, 0, 255],
	[255, 255, 186, 255], [255, 255, 121, 255], [255, 255, 56, 255], [255, 234, 56, 255],
	[255, 210, 44, 255], [255, 190, 36, 255], [255, 165, 32, 255], [255, 137, 24, 255],
	[255, 113, 20, 255], [255, 85, 12, 255], [255, 56, 8, 255], [255, 24, 4, 255],
	[255, 0, 0, 255], [234, 0, 0, 255], [218, 0, 0, 255], [202, 0, 0, 255],
	[186, 0, 0, 255], [170, 0, 0, 255], [153, 0, 0, 255], [137, 0, 0, 255],
	[117, 0, 0, 255], [101, 0, 0, 255], [85, 0, 0, 255], [64, 0, 0, 255],
	[48, 0, 0, 255], [28, 0, 0, 255], [12, 0, 0, 255], [255, 165, 80, 255],
	[255, 125, 0, 255], [206, 93, 0, 255], [161, 64, 0, 255], [113, 40, 0, 255],
	[68, 20, 0, 255], [24, 4, 0, 255], [141, 141, 222, 255], [117, 117, 190, 255],
	[93, 93, 157, 255], [72, 72, 129, 255], [48, 48, 97, 255], [32, 32, 64, 255],
	[16, 16, 36, 255], [194, 174, 174, 255], [165, 149, 149, 255], [141, 129, 125, 255],
	[117, 109, 101, 255], [93, 89, 80, 255], [68, 64, 56, 255], [44, 44, 36, 255],
	[20, 20, 16, 255], [190, 137, 218, 255], [157, 113, 186, 255], [129, 93, 153, 255],
	[101, 68, 121, 255], [72, 48, 89, 255], [48, 28, 56, 255], [20, 12, 24, 255],
	[105, 190, 80, 255], [89, 165, 68, 255], [76, 145, 56, 255], [64, 121, 48, 255],
	[52, 101, 40, 255], [36, 76, 28, 255], [28, 56, 20, 255], [16, 36, 12, 255],
	[255, 186, 186, 255], [255, 137, 137, 255], [255, 89, 89, 255], [255, 40, 40, 255],
	[250, 202, 186, 255], [246, 178, 153, 255], [246, 153, 125, 255], [190, 109, 85, 255],
	[137, 68, 48, 255], [85, 36, 24, 255], [255, 255, 255, 255]
]